// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  username     String   @unique
  email        String?  @unique
  name         String?
  surname      String?
  score        Int?
  password     String?
  gender       String?
  age          Int?
  isSubscribed Boolean?
  isPrivacy    Boolean?
  isVerified   Boolean?

  language    OtherLanguages[]
  tachelhit   Tachelhit[]
  central     Central[]
  tarifit     Tarifit[]
  translation Translation[]
}

model OtherLanguages {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  userId  String   @db.ObjectId
  english Boolean?
  spanish Boolean?
  catala  Boolean?
  french  Boolean?
  arabic  Boolean?

  user User @relation(fields: [userId], references: [id])
}

model Tachelhit {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String   @db.ObjectId
  isChecked   Boolean?
  oral        Int?
  written_lat Int?
  written_tif Int?

  user User @relation(fields: [userId], references: [id])
}

model Central {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String   @db.ObjectId
  isChecked   Boolean?
  oral        Int?
  written_lat Int?
  written_tif Int?

  user User @relation(fields: [userId], references: [id])
}

model Tarifit {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String   @db.ObjectId
  isChecked   Boolean?
  oral        Int?
  written_lat Int?
  written_tif Int?

  user User @relation(fields: [userId], references: [id])
}

model Translation {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  userId   String   @db.ObjectId
  isCatala Boolean?
  isZgh    Boolean?
  isLad    Boolean?
  catala   String?
  zgh      String?
  lad      String?

  user User @relation(fields: [userId], references: [id])
}
